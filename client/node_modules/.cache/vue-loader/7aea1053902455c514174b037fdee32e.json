{"remainingRequest":"C:\\Users\\dunka\\Documents\\GitHub\\notifweather\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\dunka\\Documents\\GitHub\\notifweather\\client\\src\\components\\Lookup.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\dunka\\Documents\\GitHub\\notifweather\\client\\src\\components\\Lookup.vue","mtime":1613618375514},{"path":"C:\\Users\\dunka\\Documents\\GitHub\\notifweather\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1613609553943},{"path":"C:\\Users\\dunka\\Documents\\GitHub\\notifweather\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1613609572218},{"path":"C:\\Users\\dunka\\Documents\\GitHub\\notifweather\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":1613609564984},{"path":"C:\\Users\\dunka\\Documents\\GitHub\\notifweather\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613609551400},{"path":"C:\\Users\\dunka\\Documents\\GitHub\\notifweather\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1613609572217}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmxvb2t1cCB7DQogIGJvcmRlcjoxMHB4IHNvbGlkICMwMDMzNjY7DQogIHdpZHRoOiA4MDBweDsNCiAgbWFyZ2luOiAwIGF1dG8NCn0NCi5zdWJtaXQtZm9ybSB7DQogIG1heC13aWR0aDogMzAwcHg7DQogIG1hcmdpbjogYXV0bzsNCn0NCg=="},{"version":3,"sources":["Lookup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Lookup.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"jumbotron lookup text-center\">\r\n      <div v-if=\"!submitted\">\r\n        <div class=\"form-group\">\r\n          <h4><label class=\"lookupfont\" for=\"city\">What city do you want to see the weather in?</label></h4>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"city\"\r\n            required\r\n            v-model=\"weather.city\"\r\n            name=\"city\"\r\n          />\r\n        </div>\r\n\r\n        <button @click=\"saveInput\" class=\"btn btn-success\">Submit</button>\r\n      </div>\r\n\r\n      <div v-else>\r\n        <span v-html=\"HTMLoutput\"></span>\r\n      </div>\r\n    </div>\r\n    <br>\r\n    <br>\r\n    <alerts>\r\n    </alerts>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Data from \"../services/Data\";\r\nimport alerts from '../components/Alerts.vue';\r\nlet temp = 0;\r\n\r\nexport default {\r\n  components: { alerts },\r\n  name: \"weather-lookup\",\r\n  data() {\r\n    return {\r\n      weather: {\r\n        id: null,\r\n        city: \"\",\r\n        published: false\r\n      },\r\n      submitted: false\r\n    };\r\n  },\r\n  created() {\r\n  \tthis.HTMLoutput = '<h4> It is ' + temp + 'degrees in ' + this.weather.city + ' </h4>';\r\n  },\r\n  methods: {\r\n    async saveInput() {\r\n      var data = {\r\n        city: this.weather.city,\r\n      };\r\n      try {\r\n        const response = await Data.getWeather(data);\r\n        this.weather.id = response.data.id;\r\n        temp = parseInt(response.data);\r\n        this.submitted = true;\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    },\r\n    newCity() {\r\n      this.submitted = false;\r\n      this.city = {};\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.lookup {\r\n  border:10px solid #003366;\r\n  width: 800px;\r\n  margin: 0 auto\r\n}\r\n.submit-form {\r\n  max-width: 300px;\r\n  margin: auto;\r\n}\r\n</style>"]}]}